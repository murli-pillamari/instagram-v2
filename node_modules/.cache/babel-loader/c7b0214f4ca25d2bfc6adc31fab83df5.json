{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/demo/instagram/src/components/addPost.jsx\";\nimport { Button, TextField } from \"@mui/material\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass AddPost extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addPostClick = () => {\n      const {\n        caption,\n        location\n      } = this.state.userPost;\n\n      if (caption && location) {\n        const array = localStorage.getItem(\"localUserPost\");\n        let items = [];\n\n        if (array) {\n          items = JSON.parse(array);\n        }\n\n        items.push(this.state.userPost);\n        localStorage.setItem(\"localUserPost\", JSON.stringify(items));\n        this.setState({\n          userPost: items\n        });\n        this.setState({\n          userPost: {\n            caption: null,\n            location: null\n          }\n        });\n        window.location.href = \"./\";\n      } else {\n        alert(\"Please fill the details\");\n      }\n    };\n\n    this.onImageChange = e => {\n      const file = e.target.files[0];\n      const reader = new FileReader();\n      reader.addEventListener(\"load\", () => {\n        this.setState({\n          userPost: {\n            postImage: URL.createObjectURL(reader.result)\n          }\n        });\n      });\n      reader.readAsDataURL(file);\n      console.log(\"file: \", file);\n    };\n\n    this.setPostData = e => {\n      this.setState({\n        userPost: { ...this.state.userPost,\n          [e.target.name]: e.target.value\n        }\n      });\n    };\n\n    this.state = {\n      userPost: {\n        postImage: null,\n        caption: null,\n        location: null\n      },\n      userPosts: []\n    };\n    this.setPostData = this.setPostData.bind(this);\n    this.setPostData = this.setPostData.bind(this);\n    this.onImageChange = this.onImageChange.bind(this);\n  }\n\n  componentDidUpdate() {\n    console.log(\"userPosts did update: \", this.state.userPosts);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"\",\n          children: \"Add Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-10 mt-10 flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            type: \"file\",\n            onChange: this.onImageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: this.setPostData,\n            name: \"caption\",\n            label: \"Caption\",\n            error: !this.state.userPost.caption,\n            helperText: \"Field is required\",\n            value: this.state.userPost.caption || \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: this.setPostData,\n            name: \"location\",\n            label: \"Location\",\n            error: !this.state.userPost.location,\n            helperText: \"Field is required\",\n            value: this.state.userPost.location || \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.addPostClick,\n            className: \"w-2/5 self-center\",\n            variant: \"outlined\",\n            children: \"ADD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default AddPost;","map":{"version":3,"names":["Button","TextField","React","AddPost","Component","constructor","props","addPostClick","caption","location","state","userPost","array","localStorage","getItem","items","JSON","parse","push","setItem","stringify","setState","window","href","alert","onImageChange","e","file","target","files","reader","FileReader","addEventListener","postImage","URL","createObjectURL","result","readAsDataURL","console","log","setPostData","name","value","userPosts","bind","componentDidUpdate","render"],"sources":["/opt/lampp/htdocs/demo/instagram/src/components/addPost.jsx"],"sourcesContent":["import { Button, TextField } from \"@mui/material\";\nimport React from \"react\";\n\nclass AddPost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userPost: {\n        postImage: null,\n        caption: null,\n        location: null,\n      },\n      userPosts: [],\n    };\n    this.setPostData = this.setPostData.bind(this);\n    this.setPostData = this.setPostData.bind(this);\n    this.onImageChange = this.onImageChange.bind(this);\n  }\n\n  componentDidUpdate() {\n    console.log(\"userPosts did update: \", this.state.userPosts);\n  }\n  addPostClick = () => {\n    const { caption, location } = this.state.userPost;\n    if (caption && location) {\n      const array = localStorage.getItem(\"localUserPost\");\n      let items = [];\n      if (array) {\n        items = JSON.parse(array);\n      }\n      items.push(this.state.userPost);\n\n      localStorage.setItem(\"localUserPost\", JSON.stringify(items));\n      this.setState({\n        userPost: items,\n      });\n\n      this.setState({\n        userPost: {\n          caption: null,\n          location: null,\n        },\n      });\n      window.location.href = \"./\";\n    } else {\n      alert(\"Please fill the details\");\n    }\n  };\n  onImageChange = (e) => {\n    const file = e.target.files[0];\n\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n      this.setState({\n        userPost: {\n          postImage: URL.createObjectURL(reader.result),\n        },\n      });\n    });\n    reader.readAsDataURL(file);\n    console.log(\"file: \", file);\n  };\n  setPostData = (e) => {\n    this.setState({\n      userPost: {\n        ...this.state.userPost,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n  render() {\n    return (\n      <>\n        <div className=\"flex flex-col\">\n          <h2 className=\"\">Add Post</h2>\n          <div className=\"px-10 mt-10 flex flex-col\">\n            <TextField type=\"file\" onChange={this.onImageChange} />\n            <br />\n            <TextField\n              onChange={this.setPostData}\n              name=\"caption\"\n              label=\"Caption\"\n              error={!this.state.userPost.caption}\n              helperText=\"Field is required\"\n              value={this.state.userPost.caption || \"\"}\n            />\n            <TextField\n              onChange={this.setPostData}\n              name=\"location\"\n              label=\"Location\"\n              error={!this.state.userPost.location}\n              helperText=\"Field is required\"\n              value={this.state.userPost.location || \"\"}\n            />\n            <Button\n              onClick={this.addPostClick}\n              className=\"w-2/5 self-center\"\n              variant=\"outlined\"\n            >\n              ADD\n            </Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nexport default AddPost;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}