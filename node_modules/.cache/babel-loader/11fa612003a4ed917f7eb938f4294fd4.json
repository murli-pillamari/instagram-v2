{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/demo/instagram/src/components/addPost.jsx\";\nimport { Button, TextField } from \"@mui/material\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass AddPost extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addPostClick = () => {\n      const {\n        caption,\n        location\n      } = this.state.userPost;\n\n      if (caption && location) {\n        var array = localStorage.getItem(\"localUserPost\");\n        let items = [];\n\n        if (array) {\n          items = JSON.parse(array);\n        }\n\n        items.push(this.state.userPost);\n        localStorage.setItem(\"localUserPost\", JSON.stringify(items));\n        this.setState({\n          userPost: items\n        }); // window.location.href = \"./\";\n      } else {\n        alert(\"Please fill the details\");\n      }\n    };\n\n    this.onImageChange = e => {\n      // const file = e.target.files[0];\n      // console.log(\"file: \", file);\n      // this.setState({\n      //   userPost: {\n      //     postImage: URL.createObjectURL(file),\n      //   },\n      // });\n      const reader = new FileReader();\n      var imgUrl = null;\n      reader.readAsDataURL(e.target.files[0]);\n      reader.addEventListener(\"load\", function () {\n        imgUrl = reader.result;\n      }, false);\n      this.setState({\n        userPost: {\n          postImage: imgUrl\n        }\n      });\n      console.log(\"imgUrl: \", imgUrl);\n    };\n\n    this.setPostData = e => {\n      this.setState({\n        userPost: { ...this.state.userPost,\n          [e.target.name]: e.target.value\n        }\n      });\n    };\n\n    this.state = {\n      userPost: {\n        userId: 0,\n        postImage: null,\n        caption: null,\n        location: null,\n        heartCount: 0\n      },\n      userPosts: []\n    };\n    this.setPostData = this.setPostData.bind(this);\n    this.addPostClick = this.addPostClick.bind(this);\n    this.onImageChange = this.onImageChange.bind(this);\n  } // componentDidMount() {\n  //   this.setState({\n  //     userPost: {\n  //       userId: this.state.userPost.userId + 1,\n  //     },\n  //   });\n  // }\n\n\n  componentDidUpdate() {\n    console.log(\"userPosts did update: \", this.state.userPost);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"\",\n          children: \"Add Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-10 mt-10 flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            type: \"file\",\n            onChange: this.onImageChange,\n            error: !this.state.userPost.postImage,\n            helperText: \"Field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: this.setPostData,\n            name: \"caption\",\n            label: \"Caption\",\n            error: !this.state.userPost.caption,\n            helperText: \"Field is required\",\n            value: this.state.userPost.caption || \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: this.setPostData,\n            name: \"location\",\n            label: \"Location\",\n            error: !this.state.userPost.location,\n            helperText: \"Field is required\",\n            value: this.state.userPost.location || \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.addPostClick,\n            className: \"w-2/5 self-center\",\n            variant: \"outlined\",\n            children: \"ADD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default AddPost;","map":{"version":3,"names":["Button","TextField","React","AddPost","Component","constructor","props","addPostClick","caption","location","state","userPost","array","localStorage","getItem","items","JSON","parse","push","setItem","stringify","setState","alert","onImageChange","e","reader","FileReader","imgUrl","readAsDataURL","target","files","addEventListener","result","postImage","console","log","setPostData","name","value","userId","heartCount","userPosts","bind","componentDidUpdate","render"],"sources":["/opt/lampp/htdocs/demo/instagram/src/components/addPost.jsx"],"sourcesContent":["import { Button, TextField } from \"@mui/material\";\nimport React from \"react\";\n\nclass AddPost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userPost: {\n        userId: 0,\n        postImage: null,\n        caption: null,\n        location: null,\n        heartCount: 0,\n      },\n      userPosts: [],\n    };\n    this.setPostData = this.setPostData.bind(this);\n    this.addPostClick = this.addPostClick.bind(this);\n    this.onImageChange = this.onImageChange.bind(this);\n  }\n  // componentDidMount() {\n  //   this.setState({\n  //     userPost: {\n  //       userId: this.state.userPost.userId + 1,\n  //     },\n  //   });\n  // }\n\n  componentDidUpdate() {\n    console.log(\"userPosts did update: \", this.state.userPost);\n  }\n  addPostClick = () => {\n    const { caption, location } = this.state.userPost;\n    if (caption && location) {\n      var array = localStorage.getItem(\"localUserPost\");\n      let items = [];\n\n      if (array) {\n        items = JSON.parse(array);\n      }\n\n      items.push(this.state.userPost);\n      localStorage.setItem(\"localUserPost\", JSON.stringify(items));\n      this.setState({\n        userPost: items,\n      });\n\n      // window.location.href = \"./\";\n    } else {\n      alert(\"Please fill the details\");\n    }\n  };\n  onImageChange = (e) => {\n    // const file = e.target.files[0];\n    // console.log(\"file: \", file);\n    // this.setState({\n    //   userPost: {\n    //     postImage: URL.createObjectURL(file),\n    //   },\n    // });\n    const reader = new FileReader();\n    var imgUrl = null;\n    reader.readAsDataURL(e.target.files[0]);\n    reader.addEventListener(\n      \"load\",\n      function () {\n        imgUrl = reader.result;\n      },\n      false\n    );\n    this.setState({\n      userPost: {\n        postImage: imgUrl,\n      },\n    });\n    console.log(\n      \"imgUrl: \",\n      imgUrl\n    );\n  };\n  setPostData = (e) => {\n    this.setState({\n      userPost: {\n        ...this.state.userPost,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n  render() {\n    return (\n      <>\n        <div className=\"flex flex-col\">\n          <h2 className=\"\">Add Post</h2>\n          <div className=\"px-10 mt-10 flex flex-col\">\n            <TextField\n              type=\"file\"\n              onChange={this.onImageChange}\n              error={!this.state.userPost.postImage}\n              helperText=\"Field is required\"\n            />\n            <br />\n            <TextField\n              onChange={this.setPostData}\n              name=\"caption\"\n              label=\"Caption\"\n              error={!this.state.userPost.caption}\n              helperText=\"Field is required\"\n              value={this.state.userPost.caption || \"\"}\n            />\n            <TextField\n              onChange={this.setPostData}\n              name=\"location\"\n              label=\"Location\"\n              error={!this.state.userPost.location}\n              helperText=\"Field is required\"\n              value={this.state.userPost.location || \"\"}\n            />\n            <Button\n              onClick={this.addPostClick}\n              className=\"w-2/5 self-center\"\n              variant=\"outlined\"\n            >\n              ADD\n            </Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nexport default AddPost;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}