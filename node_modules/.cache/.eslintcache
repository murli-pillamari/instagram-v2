[{"/opt/lampp/htdocs/demo/murli/instagram/src/index.js":"1","/opt/lampp/htdocs/demo/murli/instagram/src/reportWebVitals.js":"2","/opt/lampp/htdocs/demo/murli/instagram/src/App.js":"3","/opt/lampp/htdocs/demo/murli/instagram/src/components/dashboard.jsx":"4","/opt/lampp/htdocs/demo/murli/instagram/src/components/addPost.jsx":"5","/opt/lampp/htdocs/demo/murli/instagram/src/components/common-modules/login.js":"6","/opt/lampp/htdocs/demo/murli/instagram/src/handleAPI/login.js":"7","/opt/lampp/htdocs/demo/murli/instagram/src/constants.js":"8"},{"size":535,"mtime":1655873681997,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1655873681997,"results":"11","hashOfConfig":"10"},{"size":958,"mtime":1701413014178,"results":"12","hashOfConfig":"10"},{"size":6455,"mtime":1701080201681,"results":"13","hashOfConfig":"10"},{"size":4090,"mtime":1701080201681,"results":"14","hashOfConfig":"10"},{"size":3064,"mtime":1701415895778,"results":"15","hashOfConfig":"10"},{"size":370,"mtime":1701416099909,"results":"16","hashOfConfig":"10"},{"size":55,"mtime":1701415074788,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"yg76rj",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"21"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/opt/lampp/htdocs/demo/murli/instagram/src/index.js",[],[],[],"/opt/lampp/htdocs/demo/murli/instagram/src/reportWebVitals.js",[],[],"/opt/lampp/htdocs/demo/murli/instagram/src/App.js",[],[],"/opt/lampp/htdocs/demo/murli/instagram/src/components/dashboard.jsx",["45"],[],"import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button } from \"@mui/material\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Dashboard extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userPosts: [],\n      heartCount: 0,\n      commentHide: true,\n      comments: [],\n    };\n    this.heartClick = this.heartClick.bind(this);\n    this.onCommentClickSection = this.onCommentClickSection.bind(this);\n    this.setStorageData = this.setStorageData.bind(this);\n    this.addCommentClick = this.addCommentClick.bind(this);\n    this.onChangeComment = this.onChangeComment.bind(this);\n  }\n\n  componentDidMount() {\n    const localUserPosts = JSON.parse(localStorage.getItem(\"localUserPost\"));\n    this.setState({\n      userPosts: localUserPosts,\n    });\n  }\n  componentDidUpdate() {\n    console.log(\"this.state.userPosts: \", this.state.userPosts);\n  }\n\n  setStorageData = (ind, cases) => {\n    const userData = JSON.parse(localStorage.getItem(\"localUserPost\"));\n    const userPost = userData.find((data) => data.userId === ind);\n    if (cases === \"HeartClick\") {\n      userPost.heartCount += 1;\n    } else if (cases === \"commentClick\") {\n      userPost.commentHide = !userPost.commentHide;\n    } else if (cases === \"addComment\") {\n      userPost.comments = [...userPost.comments, this.state.comments];\n    }\n    const index = userData.findIndex((data) => data.userId === userPost.userId);\n    userData[index] = userPost;\n    localStorage.setItem(\"localUserPost\", JSON.stringify(userData));\n    this.setState({ userPosts: userData });\n  };\n\n  heartClick = (ind) => {\n    this.setStorageData(ind, \"HeartClick\");\n  };\n  onCommentClickSection = (ind) => {\n    this.setStorageData(ind, \"commentClick\");\n  };\n  addCommentClick = (ind) => {\n    this.setStorageData(ind, \"addComment\");\n  };\n  onChangeComment = (textValue) => {\n    this.setState({\n      comments: textValue,\n    });\n  };\n  render() {\n    return (\n      <div className=\"\">\n        <h2 className=\"mb-6\">Dashboard</h2>\n\n        {this.state.userPosts?.map((item, ind) => {\n          return (\n            <div key={ind + 1}>\n              <div\n                className=\"my-8 border px-30 w-8/12 mx-auto flex flex-col\"\n                style={{\n                  backgroundImage: `url(${item.postImage})`,\n                  backgroundPosition: \"center\",\n                  backgroundSize: \"contain\",\n                  backgroundRepeat: \"no-repeat\",\n                  paddingBottom: \"15px\"\n                }}\n              >\n                <div className=\"flex justify-between mx-2 font-bold\">\n                  <p\n                    style={{\n                      fontSize: \"10px\",\n                      textAlign: \"left\",\n\n                    }}\n                  >\n                    {item.location}\n                  </p>\n                  <Link to={`/addPost/${item.userId}`} className=\"font-semibold text-xs\">Edit</Link>\n                </div>\n                <span style={{ marginTop: \"170px\", position: \"relative\", top: \"46px\", padding: \"4px 0px\" }}>\n                  <span\n                    style={{\n                      marginLeft: \"5px\",\n                      float: \"left\",\n                      cursor: \"pointer\",\n                    }}\n                    onClick={() => this.heartClick(item.userId)}\n                  >\n                    <span\n                      style={{ fontSize: \"18px\", color: \"red\" }}\n                      className={`${item.heartCount === 0 && \"hidden\"}`}\n                    >\n                      &hearts;\n                    </span>\n                    <span\n                      style={{ fontSize: \"18px\" }}\n                      className={`${item.heartCount > 0 && \"hidden\"}`}\n                    >\n                      &hearts;\n                    </span>\n                    &nbsp;\n                    <span style={{ fontSize: \"14px\" }}>{item.heartCount}</span>\n                  </span>\n                  <span\n                    style={{\n                      marginRight: \"4px\",\n                      float: \"right\",\n                      fontSize: \"11px\",\n                      marginTop: \"8px\",\n                      cursor: \"pointer\",\n                    }}\n                    onClick={() => this.onCommentClickSection(item.userId)}\n                  >\n                    Comment\n                  </span>\n                </span>\n                <p\n                  style={{\n                    fontSize: \"10px\",\n                    textAlign: \"left\",\n                    marginLeft: \"5px\",\n                    marginTop: \"20px\",\n                    position: \"relative\",\n                    top: \"15px\",\n                  }}\n                >\n                  {item.caption}\n                </p>\n              </div>\n              <div\n                className={`mx-auto -mt-6  w-8/12 text-xs ${\n                  item.comments.length > 0 && \"border\"\n                }`}\n              >\n                <p className={`${item.comments.length > 0 && \"hidden\"}`}>\n                  There are no comments yet{\" \"}\n                </p>\n                <div\n                  className={`text-left mx-2 ${\n                    item.comments.length <= 0 && \"hidden\"\n                  } `}\n                >\n                  <ol>\n                    {item.comments.map((items, index) => {\n                      return <li key={index}>-- {items}</li>;\n                    })}\n                  </ol>\n                </div>\n              </div>\n              <div\n                className={`flex flex-col mt-2 mx-auto border w-8/12 pt-2 text-xs p-1 ${\n                  item.commentHide && \"hidden\"\n                }`}\n              >\n                <textarea\n                  onChange={(e) => this.onChangeComment(e.target.value)}\n                  rows=\"2\"\n                  placeholder=\"Write Down here..\"\n                />\n                <button\n                  className=\"py-1 bg-white text-blue-400 w-1/2 self-center \"\n                  onClick={() => this.addCommentClick(item.userId)}\n                >\n                  Add +\n                </button>\n              </div>\n            </div>\n          );\n        })}\n\n        <p className=\"mt-10\">\n          {\" \"}\n          <Link to=\"AddPost\">\n            <Button variant=\"outlined\">Add Posts</Button>\n          </Link>\n        </p>\n      </div>\n    );\n  }\n}\nexport default Dashboard;\n","/opt/lampp/htdocs/demo/murli/instagram/src/components/addPost.jsx",["46"],[],"import { Button, TextField } from \"@mui/material\";\nimport React from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nexport const withRouter = (WrappedComponent) => (props) => {\n  const params = useParams();\n  return <WrappedComponent {...props} params={params} />;\n};\nclass AddPost extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props);\n    this.state = {\n      userPost: {\n        userId: 0,\n        postImage: null,\n        caption: null,\n        location: null,\n        heartCount: 0,\n        commentHide: true,\n        comments: [],\n      },\n      userPosts: [],\n    };\n    this.setPostData = this.setPostData.bind(this);\n    this.addPostClick = this.addPostClick.bind(this);\n    this.onImageChange = this.onImageChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { paramUserId } = this.props.params;\n    if (paramUserId) {\n      const userData = JSON.parse(localStorage.getItem(\"localUserPost\"));\n      const userPost = userData.find((data) => {\n        return data.userId === parseInt(paramUserId);\n      });\n      this.setState({\n        userPost: userPost,\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    console.log(\"userPost did update: \", this.state.userPost);\n  }\n  addPostClick = () => {\n    const { paramUserId } = this.props.params;\n    if (paramUserId) {\n      const userData = JSON.parse(localStorage.getItem(\"localUserPost\"));\n      const userPostIndex = userData.find(\n        (data) => data.userId === parseInt(paramUserId)\n      )?.userId;\n      console.log(\"userPostIndex: \", userPostIndex);\n      // const index = userData.findIndex((item)=>item.userId === )\n    }\n\n    const { caption, location } = this.state.userPost;\n    if (caption && location) {\n      var array = localStorage.getItem(\"localUserPost\");\n\n      let items = [];\n\n      if (array) {\n        items = JSON.parse(array);\n      }\n      items.push(this.state.userPost);\n      items.forEach((items, index) => {\n        if (index + 1 !== items.userId) {\n          items.heartCount = 0;\n          items.comments = [];\n          items.commentHide = true;\n        }\n        items.userId = index + 1;\n      });\n\n      localStorage.setItem(\"localUserPost\", JSON.stringify(items));\n      this.setState({\n        userPost: items,\n      });\n      window.location.href = \"./\";\n    } else {\n      alert(\"Please fill the details\");\n    }\n  };\n  onImageChange = (e) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(e.target.files[0]);\n    // var imgUrl;\n    reader.onload = (event) => {\n      this.setState({\n        userPost: {\n          postImage: event.target.result,\n        },\n      });\n    };\n  };\n  setPostData = (e) => {\n    this.setState({\n      userPost: {\n        ...this.state.userPost,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n  render() {\n    return (\n      <>\n        <div className=\"flex flex-col\">\n          <h2 className=\"\">Add Post</h2>\n          <div className=\"px-10 mt-10 flex flex-col\">\n            <TextField\n              type=\"file\"\n              onChange={this.onImageChange}\n              error={!this.state.userPost.postImage}\n              helperText=\"Field is required\"\n            />\n            <br />\n            <TextField\n              onChange={this.setPostData}\n              name=\"caption\"\n              label=\"Caption\"\n              error={!this.state.userPost.caption}\n              helperText=\"Field is required\"\n              value={this.state.userPost.caption || \"\"}\n            />\n            <TextField\n              onChange={this.setPostData}\n              name=\"location\"\n              label=\"Location\"\n              error={!this.state.userPost.location}\n              helperText=\"Field is required\"\n              value={this.state.userPost.location || \"\"}\n            />\n            <Button\n              onClick={this.addPostClick}\n              className=\"w-2/5 self-center\"\n              variant=\"outlined\"\n            >\n              ADD\n            </Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nexport default withRouter(AddPost);\n","/opt/lampp/htdocs/demo/murli/instagram/src/components/common-modules/login.js",["47","48"],[],"/opt/lampp/htdocs/demo/murli/instagram/src/handleAPI/login.js",[],[],"/opt/lampp/htdocs/demo/murli/instagram/src/constants.js",[],[],{"ruleId":"49","severity":1,"message":"50","line":1,"column":10,"nodeType":"51","messageId":"52","endLine":1,"endColumn":25},{"ruleId":"49","severity":1,"message":"53","line":3,"column":21,"nodeType":"51","messageId":"52","endLine":3,"endColumn":32},{"ruleId":"54","severity":1,"message":"55","line":56,"column":9,"nodeType":"56","endLine":56,"endColumn":72},{"ruleId":"54","severity":1,"message":"55","line":60,"column":9,"nodeType":"56","endLine":60,"endColumn":60},"no-unused-vars","'FontAwesomeIcon' is defined but never used.","Identifier","unusedVar","'useNavigate' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]